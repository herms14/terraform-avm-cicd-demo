name: Terraform CI/CD (Dev)

on:
  push:
    branches: [dev]
  workflow_dispatch:

env:
  TERRAFORM_VERSION: 1.9.0
  GO_VERSION: 1.22
  TERRAFORM_DOCS_VERSION: v0.18.0

jobs:
  check:
    name: Terraform Check (fmt, validate, plan) [Dev]
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Terraform Init
        run: terraform init -input=false
      - name: Select/Create Terraform Workspace (Dev)
        run: |
          terraform workspace select dev || terraform workspace new dev
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Format Check
        run: terraform fmt -check -recursive
      - name: Terraform Plan (Dev)
        run: terraform plan -var-file=dev.tfvars -out=tfplan.binary
      - name: Upload Plan File
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan.binary
  terratest:
    name: Run Terratest [Dev]
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Run Go tests
        run: go test -v -timeout 20m .
        working-directory: terratest
  terraform_docs:
    name: Generate Terraform Docs [Dev]
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Ensure README.md exists
        run: touch README.md
      - name: Install terraform-docs v0.18.0
        run: |
          curl -sSLo terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.18.0/terraform-docs-v0.18.0-linux-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          sudo mv terraform-docs /usr/local/bin/
      - name: Generate Documentation
        run: terraform-docs markdown table --config .terraform-docs.yml --output-file README.md --output-mode inject .
  apply:
    name: Terraform Apply [Dev]
    runs-on: ubuntu-latest
    needs:
      - check
      - terratest
      - terraform_docs
    if: github.event_name == 'workflow_dispatch'
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Terraform Init
        run: terraform init -input=false
      - name: Select/Create Terraform Workspace (Dev)
        run: |
          terraform workspace select dev || terraform workspace new dev
      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
      - name: Terraform Apply (Dev)
        run: terraform apply -auto-approve tfplan.binary
